#!/bin/bash

out__format='wiki'
output_format() {
	out__format="$1"
}
out__configs=''
output_configs() {
	out__configs="$1"
}
out__info=''
output_info() {
	out__info="$1"
}

function rebuild() {
	out__want="$1"
	out__not="$2"

	[ "$out__want" = "" ] && out__want="^NOT_VALID"
	[ "$out__not" = "" ] && out__not="^NOT_VALID"
}

#function rebuild() {
#	local what="$1"
#	local not="$2"
#	local out
#	rm -f "tmp/*" "tmp/.required"
#
#	[ "$what" = "" ] && what="^NOT_VALID"
#	[ "$not" = "" ] && not="^NOT_VALID"
#
#	for i in `ls -1 "$configs"`
#
#	do
#		out=`echo "$i" | sed -e 's/config\.flavour\.//'`
#		egrep -h "$what" "$configs/$i" | egrep -h -v "$not" >"tmp/$out"
#	done
#}
function config-cmp() {
	(cd "$configs"; "$here/config-compare" --limit-want "$out__want" --limit-not "$out__not" --format "$out__format" --info "../../$out__info" $@ *)
}
function config-cmp-nopolicy() {
	(cd "$configs"; "$here/config-compare" --limit-want "$out__want" --limit-not "$out__not" --format "$out__format" --no-policy --info "../../$out__info" $@ *)
}
function config-cmp-interesting() {
	(cd "$configs"; "$here/config-compare" --limit-want "$out__want" --limit-not "$out__not" --format "$out__format" --interesting --info "../../$out__info" $@ *) 
}

level='===='
output_header() {
	local header="$1"

	case "$out__format" in
	wiki|text)	
		echo ""
		echo "$level $header $level"
		;;
	html)
		header=`echo "$header" | sed -e 's/>>/ \&gt;\&gt; /g'`
		echo "<h2>$header</h2>"
		;;
	esac
}
output_footer() {
	case "$out__format" in
	wiki|text)	
		echo ""
		;;
	esac
}

list_core() {
	local variant="$1"
	local flags="$2"
	local title="$3"
	local what="$4"
	local not="$5"
	local RET

	rebuild "$what" "$not"
	output_header "$title"
	config-cmp$variant --colour $flags $cmp
	RET="$?"
	output_footer "$title"
	return $RET
}
list_interesting() {
	list_core "-interesting" "" "$@"
}
list_sort() {
	list_core "" "--sort" "$@"
}
list() {
	list_core "" "" "$@"
}
list_worthy() {
	list_core "" "--worthy" "$@"
}
