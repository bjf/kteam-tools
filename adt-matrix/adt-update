#!/bin/bash

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

if [ "$#" -ne 4 ]; then
	echo "Usage: $0 <config> <hints> <archive> <britney state directory>" 1>&2
fi

config="$1"
hints="$2"
archive="$3"
britney="$4"

# Update package-relation.json
[ ! -f package-relation.json ] && \
	cp "$here/package-relation.json-initial" package-relation.json
while read series package parent flags
do
	[ -f "$britney/$series.migration" ] && \
		echo "$series $package $parent $flags $britney/$series.migration"
done <"$here/adt-matrix.conf" | \
	"$here/adt-seed-accumulate" >"nbs.cmds.new"
mv -f "nbs.cmds.new" "nbs.cmds"

# Update package-version.json
while read series package parent flags
do
	case "$package" in
	linux-meta*)
		package=`echo "$package" | sed -e 's/^linux-meta/linux/'`
		;;
	esac
	echo "$series $package"
done <"$config" |\
	"$here/adt-lp-binaries" "$archive"

# Generate versions.info
while read series package parent flags
do
	case "$package" in
	linux-meta*)
		package2=`echo "$package" | sed -e 's/^linux-meta/linux/'`
		;;
	*)
		package2=
		;;
	esac
	echo "$series $series $package $parent -- $package $package2"
done <"$config" |\
	"$here/adt-lp-version-map" "$archive" >"versions.info"

cmds="cmds.rebuild"
: >"$cmds"
while read series package parent triggers
do
	[ "$series" = '#' ] && continue

	echo "versions $series $package $parent $triggers" 1>&2

	case "$package" in
	linux-meta*)
		migration=''
		[ "$britney" = '-' ] && migration="PUBLISHED"
		[ "$migration" = '' ] && migration=`awk '/^'"$series $package"' / { state=$NF} END {print state }' "$britney/overall.txt"`
		[ "$migration" = '' ] && migration="MIGRATED"
		;;
	*)
		migration="-"
		;;
	esac
	echo "$series $package $parent $migration $triggers"
done <"versions.info" | \
	"$here/adt-matrix" "$archive" "$hints"

# Build the commands after the adt-matrix completes as we rely no its missing
# test information to be up to date.
: >'all.cmds.new'
: >'miss-updated.cmds.new'
while read series package parent triggers
do
	echo "commands $series $package $triggers"
	
	"$here/adt-commands-payload" "$series" "$archive" $triggers >"$series-$package.cmds.new"
	mv -f "$series-$package.cmds.new" "$series-$package.cmds"

	# Summaries.
	cat "$series-$package.cmds" >>'all.cmds.new'
	grep '# MISS$' "$series-$package.cmds" >>'miss.cmds.new'
done <"versions.info"

# Summaries.
mv 'all.cmds.new' 'all.cmds'
mv 'miss-updated.cmds.new' 'miss-updated.cmds'
mv 'miss.cmds.new' 'miss.cmds'
