#!/usr/bin/env python3
#

from time                               import sleep
from argparse                           import ArgumentParser, RawTextHelpFormatter
from mtrello                            import MTrello

class Activate(object):
    def activate(self, args):
        '''
        '''
        mt = MTrello()
        card = mt.card_find_on_list_on_board(f'SRU Cycle {args.cycle}', 'Cycle Roles', 'Active Crankers')
        card.add_member(mt.find_me())

    def deactivate(self, args):
        '''
        '''
        mt = MTrello()
        card = mt.card_find_on_list_on_board(f'SRU Cycle {args.cycle}', 'Cycle Roles', 'Active Crankers')
        card.remove_member(mt.find_me())


if __name__ == '__main__':
    app_description = '''
    '''
    app_epilog = '''
    '''

    parser = ArgumentParser(description=app_description, epilog=app_epilog, formatter_class=RawTextHelpFormatter)
    parser.add_argument('cycle', help='SRU cycle tag (YYYY.MM.DD)')
    args = parser.parse_args()

    while True:
        retval = Activate().activate(args)
        sleep(5)
        retval = Activate().deactivate(args)
        sleep(5)

    exit(retval)
