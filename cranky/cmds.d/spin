#!/bin/bash -eu

function usage() {
	cat <<-EOF

	Create tracking bug(s) and card(s) for a specific spin and kernel source.
	If a kernel source exists as a backport of the same name in an older series,
	this might create multiple tracking bugs and cards.
	No cards are generated for development.

	Usage: cranky spin [-d] [--devel] <handle> <spin>

	<handle>:	<series>:<source>	Selects the kernel to be spun.
	<spin>:		<cycle date>-<spin nr>	Selects the spin to create.
	 		 YYYY.MM.DD

	Example:
	  \$ cranky spin bionic:linux-azure 2019.02.04-2

	EOF
	exit 2
}

function match() {
	echo "$1" | gawk '/^'"$2"'$/{exit 0} {exit 1}'
	return $?
}

args=()
spin=""
handle=""
devel=0
while [ $# -gt 0 ]; do
	case "$1" in
		-d|--dry-run)
			args+=('--dry-run')
			;;
		--devel)
			args+=('--devel')
			devel=1
			;;
		-h|--help)
			usage
			;;
		*)
		if [ "$handle" = "" ]; then
			handle="$1"
		elif [ "$spin" = "" ]; then
			spin="$1"
		else
			echo "error: Unknown argument $1" >&2
			usage
		fi
		;;
	esac
	shift
done

if [ "$handle" == "" ] || [ "$spin" == "" ]; then
	echo "error: Missing required arguments" >&2
	usage
fi
if ! match "$handle" "[a-z]+:[a-z][a-z\-]*";  then
	echo "error: Invalid handle format" >&2
	usage
fi
if ! match "$spin" "[0-9]{4}\.[0-9]{2}\.[0-9]{2}-[0-9]+"; then
	echo "error: Invalid spin format" >&2
	usage
fi
series=$(echo "$handle" |cut -d: -f1)
sourcename=$(echo "$handle" |cut -d: -f2)
cycledate=$(echo "$spin" |cut -d- -f1)
spinnr=$(echo "$spin" |cut -d- -f2)

if [ "$devel" -eq 0 ]; then
	args+=('--series' "$series")
fi
args+=('--source' "$sourcename")
args+=('--spin' "$spinnr" "$cycledate")

cranky_root=$(dirname "$C")
"$cranky_root/../stable/create-kernel-tasks" "${args[@]}"

exit 0
