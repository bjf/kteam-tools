#!/bin/bash

C=${C-cranky}
P=${P-$0}

here=$(dirname "$(realpath -e "${0}")")

build_src()
{
	local dir="$1"
	local session="$2"

	(
		cd "$dir" || exit 1

		git clean -x -f -d
		schroot -r -c "$session" -- fakeroot debian/rules clean
		schroot -r -c "$session" -- dpkg-buildpackage -S -i -I -uc -us -d
	)
}

usage()
{
	cat <<EOF
Usage: cranky build-sources [handle]

Build all source packages for the specified series and source as specified in
kernel-series.yaml.

positional arguments:
  handle                Handle to a kernel source tree, either a path to a
                        kernel source tree or a handle in <series>:<package>
                        format. If not given the current working directory is
                        used.

Examples:
  $ cranky build-sources
      Build all source packages for the kernel source tree in the current
      working directory.
  $ cranky build-sources bionic:linux
      Build all source packages defined under the bionic:linux source in
      ktl/kernel-series.yaml. Finds the source trees based on 'package-path'
      from the cranky config file.
EOF

	exit 2
}

# MAIN:
while [ "$1" ]
do
	case "$1" in
	-*)
		usage
		;;
	*)
		break;
	esac
	shift
done

case "$#" in
0)
	handle="$PWD"
	;;
1)
	handle="$1"
	;;
*)
	usage
	;;
esac

sources=$( "$here/cranky-shell-helper" "source-packages-path" "$handle" )
if [ "$sources" = '' ]; then
	exit 1
fi

session=$("$here/cranky" chroot map-session sources "$handle")
if [ "$session" = '' ]; then
	echo "$P: sources session not available -- run: $C chroot create-session sources \"$handle\""
	exit 1
fi

# Build the source.
for source in $sources
do
	build_src "$source" "$session"
done
