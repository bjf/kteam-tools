#!/bin/bash -eu

C=${C-cranky}
P=${P-$0}

here=$(dirname "$(readlink -f "${0}")")

function out()
{
	local rc=$?

	trap - EXIT INT TERM HUP

	if [ "${rc}" -ne 0 ] ; then
		echo "Script failed" >&2
	fi

	exit "${rc}"
}

function build_src()
{
	local dir=$1 session=$2 current=$3

	if [ "${current}" -eq 1 ] && [ "${PWD}" != "${dir}" ] ; then
		# Skip the build of this source package if --current is specified and
		# the current directory doesn't match the package directory
		return
	fi

	(
		cd "$dir" || exit 1

		git clean -x -f -d
		schroot -r -c "$session" -- fakeroot debian/rules clean
		schroot -r -c "$session" -- dpkg-buildpackage -S -i -I -uc -us -d
	)
}

function usage()
{
	cat <<EOF
Usage: cranky build-sources [-c] [-h] [handle]

Build all source packages for the specified series and source as specified in
kernel-series.yaml.

Positional arguments:
  handle         Handle to a kernel source tree, either a path to a kernel
                 kernel source tree or a handle in <series>:<package> format.
                 If not given the current working directory is used.

Optional arguments:
  -c, --current  Only build the source package for the current working
                 directory.
  -h, --help     Show this help message and exit.

Examples:
  $ cranky build-sources
      Build all source packages for the kernel source tree in the current
      working directory.

  $ cranky build-sources bionic:linux
      Build all source packages defined under the bionic:linux source in
      ktl/kernel-series.yaml. Finds the source trees based on 'package-path'
      from the cranky config file.

  $ cranky build-sources --current
      Build only the source package for the current working directory.
EOF
}

current=0
handle=${PWD}

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-c|--current)
			current=1
			;;
		-h|--help)
			usage
			exit
			;;
		-*)
			usage
			exit 2
			;;
		*)
			if [ ${#} -gt 1 ] ; then
				usage
				exit 2
			fi
			handle=${1}
			break
			;;
	esac
	shift
done

trap out EXIT INT TERM HUP

sources=$("$here/cranky-shell-helper" source-packages-path "$handle")
if [ -z "$sources" ] ; then
	exit 1
fi

session=$("$here/cranky" chroot map-session sources "$handle")
if [ -z "$session" ] ; then
	echo "$P: sources session not available -- run: $C chroot create-session sources \"$handle\"" >&2
	exit 1
fi

# Build the source.
for source in $sources
do
	build_src "$source" "$session" "$current"
done
