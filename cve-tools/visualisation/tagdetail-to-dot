#!/usr/bin/python3

import sys

print('strict digraph {')
print(' concentrate=true;')
print(' rankdir=RL; // Left to Right, instead of Top to Bottom')

entries = []
incoming = {}
link = {}
interesting = {}

# Injest all the nodes.
for line in sys.stdin:
    (tid, series, source, version, _, _, tidlink, valid) = line.strip().split('|')
    entries.append([tid, series, source, version, tidlink, valid])
    incoming.setdefault(tidlink, 0)
    incoming[tidlink] += 1
    link[tid] = tidlink

# Work out which ones are interesting.
for entry in entries:
    (tid, series, source, version, tidlink, valid) = entry

    interesting[tid] = False
    if incoming.get(tid, 0) != 1 or incoming.get(tidlink, 0) != 1 or series != 'upstream':
        interesting[tid] = True
    if valid == "0":
        interesting[tid] = True


for entry in entries:
    (tid, series, source, version, tidlink, valid) = entry

    if not interesting[tid]:
        continue

    fixed = False
    while tidlink != '' and not interesting[tidlink]:
        fixed = True
        tidlink = link[tidlink]

    removed = "\\n(removed)" if valid == "0" else ""
    print(' T{tid} [ group="{series}-{source}"; label="{series} {source}\\n{version}{removed}";'.format(tid=tid, series=series, source=source, version=version, removed=removed), end='')
    if valid == "0":
        print(' color="red";', end='')
    print(' ]')
    if tidlink != '':
        print(' T{tid} -> T{tidlink}'.format(tid=tid, tidlink=tidlink), end='')
        if fixed:
            print(' [style=dashed,color="orange"]', end='')
        print('')
print('}')
