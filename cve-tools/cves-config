#!/usr/bin/python
from __future__ import print_function

from ktl.kernel_series import KernelSeries

kernel_series = KernelSeries()

upstreams = []
derived = {}
upstream_derived = {}
for series in sorted(kernel_series.series, key=KernelSeries.key_series_name):
    for source in sorted(series.sources, key=lambda x: x.name):
        derived_from = source.derived_from
        if derived_from:
            derived.setdefault((derived_from.series.name, derived_from.name), []).append(source)

        if series.supported:
            versions = source.versions
            if versions:
                version = versions[-1]
                if version not in upstreams:
                    upstreams.append(version)
                upstream_derived.setdefault(version, []).append(source.series.codename + '_' + source.name)

upstreams = sorted(upstreams, key=lambda x: [ int(y) for y in x.split('.') ])

# We always want to scan linus' tree.
print("upstream linux linux-linus.git master scan,tags-git:v* - git://git.launchpad.net/~ubuntu-kernel-test/ubuntu/+source/linux/+git/linus--linux")

url = 'git://kernel.ubuntu.com/kernel-ppa/stable-queue-branches.git'
for version in upstreams:
    version_short = version
    if version_short.endswith('.0'):
        version_short = version_short[:-2]

    print("upstream linux-{version_short} stable-queue-branches.git stable-queue-{version_short} scan,tags-git:v{version_short}.*,transfer-pending:{transfer},transfer-message:in%s%v,transfer-message-tip:in%s{version_short}.y%squeue - {url}".format(version_short=version_short, url=url, transfer="|".join(upstream_derived[version])))
    url='-'

flags_eol = 'mark-ignored,mark-ignored-message:now%send-of-life'
flags_unsupported = 'scan,tags-lp,mark-pockets,unsupported'

urls_seen = {}
for series in sorted(kernel_series.series, key=KernelSeries.key_series_name):
    for source in sorted(series.sources, key=lambda x: x.name):
        url = '-'
        branch = '-'

        # Find the matching package for this source.
        package = source.lookup_package(source.name)
        if package.repo:
            (url, branch) = (package.repo.url, package.repo.branch)
            if not branch:
                if package.name == 'linux':
                    branch = 'master-next'
                else:
                    branch = 'master'

        # Supported package in a supported series.
        if source.supported and (series.supported or series.development):
            flags = 'scan,tags-lp,mark-pockets'
            derived_key = (source.series.name, source.name)
            if derived_key in derived:
                result = []
                for derived_source in derived[derived_key]:
                    result.append("{}_{}".format(derived_source.series.codename, derived_source.name))
                if len(result) > 0:
                    flags += ",transfer-pending:{},transfer-message:pending%srebase,transfer-message-tip:in%sparent".format("|".join(result))

        # An unsupported package in a supported series.
        elif series.supported:
            flags = flags_unsupported

        # A completely dead series.
        else:
            flags = flags_eol
            url = '-'
            branch = '-'

        if url == '-':
            repo = '-'
        else:
            #variant = source.name
            #if variant.startswith('linux'):
            #    variant = variant[5:]
            #repo = "ubuntu-{series}{variant}.git".format(series=source.series.codename, variant=variant)
            repo = "{series}-{source}.git".format(series=source.series.codename, source=source.name)
            if url in urls_seen:
                repo = urls_seen[url]
                url = '-'
            else:
                urls_seen[url] = repo

        if series.esm and flags != flags_unsupported:
            print("{series} {source} {repo} {branch} {flags} - {url}".format(series=source.series.codename, source=source.name, branch='-', flags='mark-ignored,mark-ignored-message:now%send-of-life', url='-', repo='-'))
            flags = flags + ',mark-esm,archives:ubuntu|security/updates-ppa:ubuntu-esm/ubuntu/esm|proposed-ppa:canonical-kernel-esm/ubuntu/proposed|ppa:canonical-kernel-esm/ubuntu/ppa'
            print("{series} {source} {repo} {branch} {flags} - {url}".format(series=source.series.codename + '/esm', source=source.name, branch=branch, flags=flags, url=url, repo=repo))
        else:
            print("{series} {source} {repo} {branch} {flags} - {url}".format(series=source.series.codename, source=source.name, branch=branch, flags=flags, url=url, repo=repo))
