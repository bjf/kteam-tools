#!/bin/bash

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

repos="$HOME/cve-autotriage"

work="$1"
cache="$2"
base="$3"

html_real="$base/kernel-version-map.html"
html="$html_real.new"
txt_real="$base/kernel-version-map.txt"
txt="$txt_real.new"
pockets_real="$base/kernel-version-pockets.txt"
pockets="$pockets_real.new"

tag_cache="$cache/tag"
mkdir -p "$tag_cache"
lp_cache="$cache/lp"

: >"$txt"
: >"$pockets"
cat - >"$html" <<EOM
<html>
<head>
<title>Ubuntu to Mainline kernel version mapping</title>
</head>
<body>
EOM
while read series cvebranch repo branch flags X
do
	case ",$flags," in
	*,scan,*)		;;
	*)			continue;;
	esac

	echo "*** checking $series $cvebranch ... " 1>&2
	case "$series" in
	upstream|product)		continue;;
	esac

	(
		cd "$repos/$repo" || exit 1

		"$here/cves-git-tags-versions" versions "$tag_cache" "$cvebranch" \
			$("$here/cves-kernel-versions-lookup" "$lp_cache" "tags" "$series" "$cvebranch") | \
		{
			cat - >>"$html" <<EOM
<h2>$series $cvebranch</h2>
<table border="1">
<tr><th>Ubuntu Kernel Version<th>Ubuntu Kernel Tag<th>Mainline Kernel Version</tr>
EOM
			while read version tag kver
			do
				echo "<tr><td>$version<td>$tag<td>$kver</tr>" >>"$html"
				echo "$series $cvebranch $version $tag $kver" >>"$txt"
			done
			echo "</table>" >>"$html"
		}
	)

	"$here/cves-kernel-versions-lookup" "$lp_cache" "cve-pockets" "$series" "$cvebranch" | \
	{
		read release security updates proposed ppa

		[ "$release" != '' -a "$release" != "None" ] && echo "$series $cvebranch $release release"
		[ "$security" != '' -a "$security" != "None" ] && echo "$series $cvebranch $security security"
		[ "$updates" != '' -a "$updates" != "None" ] && echo "$series $cvebranch $updates updates"
		[ "$proposed" != '' -a "$proposed" != "None" ] && echo "$series $cvebranch $proposed proposed"
	} >>"$pockets"
done <"$work"
cat - >>"$html" <<EOM
</body>
</html>
EOM

mv -f "$html" "$html_real"
mv -f "$txt" "$txt_real"
mv -f "$pockets" "$pockets_real"
