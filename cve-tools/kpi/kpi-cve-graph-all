#!/bin/bash

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

if [ "$#" -ne 1 ]; then
	echo "Usage: $0 <output directory>" 1>&2
	exit 1
fi
out="$1"

plot="/tmp/plot.$$"

plot_colour()
{
	local colour="$1"

#	cat - <<EOL
#set style line 1 lc rgb "#9400d3"
#set style line 2 lc rgb "#009e73"
#set style line 3 lc rgb "#56b4e9"
#set style line 4 lc rgb "#e69f00"
#set style line 5 lc rgb "#f0e442"
#set style line 6 lc rgb "#0072b2"
#set style line 6 lc rgb "#e51e10"
#set style line 8 lc rgb "#000000"
#EOL

	[ "$colour" = '-' ] && return

	cat - <<EOL
set border linecolor rgb "$colour"
set xtics textcolor rgb "$colour"
set ytics textcolor rgb "$colour"
set key textcolor rgb "$colour"
set title textcolor rgb "$colour"
set xlabel textcolor rgb "$colour"
set ylabel textcolor rgb "$colour"
EOL
}

plot_open_template()
{
	local colour="$1"
	plot_colour "$colour"
	cat - <<'EOL'
set xdata time
set timefmt "%Y-%m-%d"
set format x "%Y-%m-%d"

set terminal svg size 600,300 dynamic

#set key below
#set key below samplen 2 spacing .5 font ",8"
set bmargin 5.5
set key below samplen 2 spacing .5 font ",7"

#set xtics rotate by 45 offset -2.2,-2.2
set xtics rotate font ",8"

plot \
 filename using 1:2 with lines title "Total" lc rgb "#9400d3", \
 filename using 1:3 with lines title "Critical" lc rgb "#009e73", \
 filename using 1:4 with lines title "High" lc rgb "#56b4e9", \
 filename using 1:5 with lines title "Medium" lc rgb "#e69f00", \
 filename using 1:6 with lines title "Low" lc rgb "#f0e442", \
 filename using 1:7 with lines title "Negligible" lc rgb "#0072b2"
EOL
}
plot_open()
{
	local data="$1"
	local prefix="$2"

	plot_open_template - | gnuplot -p -e "filename=\"$data\"" -e "set title \"$series $source Open\"" - >"$prefix--open.svg"
	plot_open_template white | gnuplot -p -e "filename=\"$data\"" -e "set title \"$series $source Open\"" - >"$prefix--open--dark.svg"
}

plot_needswork_template()
{
	local colour="$1"
	plot_colour "$colour"
	cat - <<'EOL'
set xdata time
set timefmt "%Y-%m-%d"
set format x "%Y-%m-%d"

set terminal svg size 600,300 dynamic

#set key below
#set key samplen 2 spacing .5 font ",8"
set bmargin 5.5
set key below samplen 2 spacing .5 font ",7"

#set xtics rotate by 45 offset -2.2,-2.2
set xtics rotate font ",8"

set yrange [0:*]

plot \
 filename using 1:2 with lines title "Total" lc rgb "#9400d3", \
 filename using 1:3 with lines title "Needs Work" lc rgb "#009e73"
EOL
}
plot_needswork()
{
	local data="$1"
	local prefix="$2"

	plot_needswork_template - | gnuplot -p -e "filename=\"$data\"" -e "set title \"$series $source Needs Work\"" - >"$prefix--needswork.svg"
	plot_needswork_template "white" | gnuplot -p -e "filename=\"$data\"" -e "set title \"$series $source Needs Work\"" - >"$prefix--needswork--dark.svg"
}

plot_opened_template()
{
	local colour="$1"
	plot_colour "$colour"
	cat - <<'EOL'
set xdata time
set timefmt "%Y-%m-%d"
set format x "%Y-%m-%d"

set terminal svg size 600,300 dynamic

#set xtics rotate by 45 offset -2.2,-2.2
set xtics rotate font ",8"

set bmargin 5.5
set key below samplen 2 spacing .5 font ",7"

set ylabel "CVEs per Month" font ",8"
set yrange [0:*]

plot \
 filename using 1:2 with lines title "Critical" lc rgb "#9400d3", \
 filename using 1:3 with lines title "High" lc rgb "#009e73", \
 filename using 1:4 with lines title "Medium" lc rgb "#56b4e9", \
 filename using 1:5 with lines title "Low" lc rgb "#e69f00", \
 filename using 1:6 with lines title "Negligible" lc rgb "#f0e442", \
 filename using 1:2:($2 < 3 ? "" : $2) with labels tc rgb "#9400d3" offset char 0,0.4 font ",8" notitle, \
 filename using 1:3:($3 < 3 ? "" : $3) with labels tc rgb "#009e73" offset char 0,0.4 font ",8" notitle, \
 filename using 1:4:($4 < 3 ? "" : $4) with labels tc rgb "#56b4e9" offset char 0,0.4 font ",8" notitle, \
 filename using 1:5:($5 < 3 ? "" : $5) with labels tc rgb "#e69f00" offset char 0,0.4 font ",8" notitle, \
 filename using 1:6:($6 < 3 ? "" : $6) with labels tc rgb "#f0e442" offset char 0,0.4 font ",8" notitle
EOL
#filename using 1:4:4 with labels offset char 0,0.25 font ",6" title "", \
}
plot_opened()
{
	local data="$1"
	local prefix="$2"

	plot_opened_template - | gnuplot -p -e "filename=\"$data\"" -e "set title \"$series $source CVEs Opened\"" - >"$prefix--opened.svg"
	plot_opened_template "white" | gnuplot -p -e "filename=\"$data\"" -e "set title \"$series $source CVEs Opened\"" - >"$prefix--opened--dark.svg"
}
while read series source
do
	echo "$series $source ..."
	prefix=$( echo "$series--$source" | sed -e 's#/#@#' )

	"$here/kpi-cve-graph" "open" "$series" "$source" *.json >"$plot"
	# Last entry in precise is just junk :<
	case "$series--$source" in
	precise--linux)
		<"$plot" grep -v '^2017-05-29 ' >"$plot.new"
		mv "$plot.new" "$plot"
		;;
	esac
	plot_open "$plot" "$out/$prefix"

	"$here/kpi-cve-graph" "needswork" "$series" "$source" *.json >"$plot"
	plot_needswork "$plot" "$out/$prefix"

	"$here/kpi-cve-graph" "opened" "$series" "$source" *.json >"$plot"
	#echo "v-- APW"
	#cat "$plot"
	#echo "^-- APW"
	plot_opened "$plot" "$out/$prefix"
done <<EOL
lucid linux
precise linux
precise/esm linux
trusty linux
vivid/ubuntu-core linux
xenial linux
zesty linux
EOL

rm -f "$plot"
