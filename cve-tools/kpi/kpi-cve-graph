#!/usr/bin/python3 
from collections import defaultdict
import json
import sys

(mode, series, package) = (sys.argv[1:4])
key = series + " " + package
prev = None
for date in sys.argv[4:]:
    with open(date) as info_fd:
        info = json.load(info_fd)

    if key not in info:
        continue

    date = info[key]['meta']['date']
    
    if mode in ('open', 'closed'):
        # This almost cirtainly represents closure.
        if info[key]['state']['summary'].get('open', 0) == 0:
            continue

        print(date,
            info[key]['state']['summary'][mode],
            info[key]['priority']['by-summary'][mode].get('critical', 0),
            info[key]['priority']['by-summary'][mode].get('high', 0),
            info[key]['priority']['by-summary'][mode].get('medium', 0),
            info[key]['priority']['by-summary'][mode].get('low', 0),
            info[key]['priority']['by-summary'][mode].get('negligible', 0),
        )

    elif mode == 'delta':
        if prev != None:
            total = 0
            result = []
            for priority in ('critical', 'high', 'medium', 'low', 'negligible'):
                dead_p = prev['priority']['by-summary']['closed'].get(priority, 0)
                total_p = prev['priority']['total'].get(priority, 0)
                dead_c = info[key]['priority']['by-summary']['closed'].get(priority, 0)
                total_c = info[key]['priority']['total'].get(priority, 0)
                delta = (total_c - total_p) - (dead_c - dead_p)

                #print(total_c, total_p, total_c - total_p, dead_c, dead_p, dead_c - dead_p, delta, file=sys.stderr)
                result.append(str(delta))
                total += delta
            #print("APW", " ".join([date, str(total)] + result), file=sys.stderr)
            print(" ".join([date, str(total)] + result))

        prev = info[key]

    else:
        raise(ValueError("Unknown Mode"))
