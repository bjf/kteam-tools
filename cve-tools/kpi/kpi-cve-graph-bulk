#!/usr/bin/python3 
from collections import defaultdict
import datetime
import json
import sys

epoch = datetime.datetime.utcfromtimestamp(0)

gauges = {}
for date in sys.argv[4:]:
    with open(date) as info_fd:
        info = json.load(info_fd)

    for key in info:
        (series, package) = key.split()

        if package in ('upstream', 'devel'):
            continue

        date = info[key]['meta']['date']
        date_bits = date.split('-')
        dt = datetime.datetime(year=int(date_bits[0]), month=int(date_bits[1]), day=int(date_bits[2]))
        timestamp = int((dt - epoch).total_seconds() * 1000.0)

        # This almost cirtainly represents closure.
        if info[key]['state']['summary'].get('open', 0) == 0:
            continue

        #total = 0
        #result = []
        #for state in ('critical', 'high', 'medium', 'low', 'negligible'):
        #    delta = (info[key]['priority']['by-summary']['open'].get(state, 0) -
        #             info[key]['priority']['by-state'].get('pending', {}).get(state, 0))
        #    total += delta
        #    result.append(delta)

        labels = 'series="' + series + '",source="' + package + '"'
        gauges_stamp = gauges.setdefault(timestamp,{})
        gauges_stamp.setdefault('open', {})[labels] = info[key]['state']['summary'].get('open', 0)
        gauges_stamp.setdefault('needswork', {})[labels] = (info[key]['state']['summary'].get('open', 0) - 
                                                            info[key]['state']['total'].get('pending', 0))


for timestamp in sorted(gauges):
    with open(str(timestamp) + '.data', 'w') as ofd:
        for gauge_key in sorted(gauges[timestamp]):
            gauge_name = 'kernel_test4_cves_' + gauge_key
            print('# HELP ' + gauge_name + ' help', file=ofd)
            print('# TYPE ' + gauge_name + ' gauge', file=ofd)
            for labels in gauges[timestamp][gauge_key]:
                value = gauges[timestamp][gauge_key][labels]
                print(gauge_name + '{' + labels + '}', value, timestamp, file=ofd)
