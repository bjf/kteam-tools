#!/usr/bin/python
#
# cves-git-tags-order
#
import sys
import os
import re

from subprocess     import Popen, PIPE

cache = sys.argv[1]
versions = sys.argv[2:]

# Find the date of the release pointed to by this tag
def tag_date_payload(tag):
    cmd = [ 'git', 'log', '-1', '--format=format:%ct', tag ]
    return Popen(cmd, stdout=PIPE).communicate()[0]


def tag_date_cache(tag, sha1):
    # Use the sha1 of the tag as a cache key.
    vcache = os.path.join(cache, sha1 + ".ts")
    try:
        with open(vcache, 'r') as f:
            line = f.readline()
            return line.strip()
    except:
        version = tag_date_payload(tag)

        with open(vcache, 'w') as f:
            f.write(version + "\n")
    
        return version

def tag_date(tag):
    return tag_date_cache(tag, tags_sha[tag])


def git_tagshas():
    tags = {}
    # Grab the first line and pull the version string out of it
    cmd = [ 'git', 'for-each-ref', 'refs/tags/*' ]
    p = Popen(cmd, stdout=PIPE)
    for line in p.stdout:
        line = line.decode('utf-8')
        (sha1, what, tag) = line.strip().split()
        tag_name = tag.split('/', 2)[2]

        tags[tag_name] = sha1
    p.terminate()
    return tags


# Get a list of valid tags and their shas
tags_sha = git_tagshas()

# Find the list of tags for each version
tags_ts = []
for (tag, version) in zip(versions[::2], versions[1::2]):
    tags_ts.append((tag_date(tag), tag, version))
tags_ts.sort()
tags = [ (tag_name, tag_version) for tag_ts, tag_name, tag_version in tags_ts ]

for (tag_name, tag_version) in tags:
    print tag_name + " " + tag_version
