#!/bin/bash

out="$HOME/public_html/status"
state="$out/dashboard-state"

mkdir -p "$state"

now=`date +%s`
date=`date '+%d-%b-%Y %H:%M'`

let later="$now+100"

status="$out/dashboard"

{
	while read file url
	do
		# Get this if we can ... ignore it, we will use the previous data.
		wget -q -O "$state/$file.new" "$url"

		if [ ! -f "$state/$file.new" ]; then
			echo "UNKNOWN UNKNOWN MISSING%sDASHBOARD $now -1 -1 $url" >"$state/$file.new"
		fi
		mv "$state/$file.new" "$state/$file.dash"
	done <"$0.conf"
	echo "000-Dashboard `hostname` Scheduled%sUpdate $now $later $later"
	cat "$state"/*.dash
} | sort | {
	while read -r line
	do
		echo "$line" 1>&2
		echo "$line"
	done
} | {
	: >"$status.txt.new"
	last_section=''
	while read section host title time warning alert message
	do
		if [ "$warning$alert" = '--' ]; then
			delta='-'
			case "$time" in
			G)	mode="good" ;;
			W)	mode="warn" ;;
			A)	mode="alert" ;;
			*)	mode="warn" ;;
			esac
		else
			let delta="$now-$time"
			if [ "$delta" -gt "$alert" ]; then
				mode="alert"
			elif [ "$delta" -gt "$warning" ]; then
				mode="warn"
			else
				mode="good"
			fi
		fi

		echo "$section $host $title $delta $mode $message" >>"$status.txt.new"
	done
}

#
# Generate the HTML tables from the .txt status summary.
#
n=0
last_section=''
while read section host title delta mode message
do
	let n="$n+1"

	if [ "$section" != "$last_section" ]; then
		let n="$n+3"
		last_section="$section"
	fi
done <"$status.txt.new"
# When we split we remove one blank line plus we suppress the one at the top.
let total="$n-2"
let halfway="($total/2)"

let min_distance="$total"
let min_where="0"

n=0
last_section=''
while read section host title delta mode message
do
	let n="$n+1"

	if [ "$section" != "$last_section" ]; then
		# Poor mans abs()
		let distance="$total-($n*2)"
		# abs(distance)
		distance="${distance#-}"

		#echo "DIFF: $section distance=$distance min_distance=$min_distance min_where=$min_where"
		if [ "$distance" -lt "$min_distance" ]; then
			min_distance="$distance"
			min_where="$n"
		fi
		[ "$last_section" != '' ] && let n="$n+1"
		let n="$n+2"
		last_section="$section"
	fi
done <"$status.txt.new"

let spacing="$total-(($min_where-1)*2)"
spacing2=0
if [ "$spacing" -lt 0 ]; then
	let spacing2="-$spacing"
	let spacing=0
fi
#echo "total=$total halfway=$halfway min_distance=$min_distance min_where=$min_where $(($total-$min_where)) spacing=$spacing spacing2=$spacing2"

cat - <<EOL >"$status.html.new"
<html>
<head>
<meta http-equiv="refresh" content="60">
<title>Kernel Dashboard</title>
<style>
.good { background-color: green; }
.warn { background-color: yellow; }
.alert { background-color: red; }
table.columns td.columns {
  vertical-align: top;
}
table.status {
  border: 0px;
  border-collapse: collapse;
}
table.status tr.gap, table.status tr.gap td {
  border: 0px;
  padding: 1px;
}
table.status tr, table.status th, table.status td {
  border: 1px solid black;
}
</style>
<script>
function pageLoaded() {
    if (!Date.now) {
	Date.now = function() { return new Date().getTime(); }
    }
    now = Math.floor(Date.now() / 1000)
    if ((now - $now) > (300 + 60 + 30)) {
	    document.getElementById("dashboard").style.background = "red";
    }
}
</script>
</head>
<body onload="pageLoaded()">
<h1>Kernel Dashboard ($date)</h1>
<table width=100% class="columns"><td class="columns" width=50%>
<table width=100% class="status">
EOL
last_section=''
n=0
while read section host title delta mode message
do
	let n="$n+1"
	if [ "$n" = "$min_where" ]; then
		echo "</table><td class=\"columns\" width=50%><table class=\"status\" width=100%>" >>"$status.html.new"
		last_section=''
		spacing="$spacing2"
	fi

	section=`echo "$section" | sed -e 's/%s/ /g' -e 's/%p/%/g' -e 's/^000-//'`
	title=`echo "$title" | sed -e 's/%s/ /g' -e 's/%p/%/g'`
	
	if [ "$last_section" != "$section" ]; then
		if [ "$last_section" != '' ]; then
			echo "<tr class=\"gap\"><td >&nbsp;</tr>" >>"$status.html.new"
			let n="$n+1"
			if [ "$spacing" -gt 0 ]; then
				echo "<tr class=\"gap\"><td >&nbsp;</tr>" >>"$status.html.new"
				let spacing="$spacing-1"
			fi
		fi
		let n="$n+2"
		last_section="$section"

		echo "<tr><th colspan=4>$section</tr>" >>"$status.html.new"
		echo "<tr><th>Tool<th>Host<th>Last<th>Notes</tr>" >>"$status.html.new"
	fi

	# Ensure we do not execute something other than a number.
	#let time="$time + 0"
	#time=`date --date=@$time '+%d-%b-%Y %H:%M'`

	if [ "$delta" != '-' ]; then
		let delta="$delta / 60"
		ext='m'
		if [ "$delta" -ge 60 ]; then
			let delta="$delta / 60"
			ext='h'

			if [ "$delta" -ge "24" ]; then
				let delta="$delta / 24"
				ext='d'
			fi
		fi
		delta="$delta$ext"
	fi
	
	if [ "$section" = "Dashboard" ]; then
		id=" id=\"dashboard\""
	else
		id=''
	fi
	echo "<tr$id class=\"$mode\"><td>$title<td>$host<td>$delta<td>$message</tr>" >>"$status.html.new"
done <"$status.txt.new"

cat - <<EOL >>"$status.html.new"
</table>
</table>
</body>
</html>
EOL

mv -f "$status.html.new" "$status.html"
mv -f "$status.txt.new" "$status.txt"
