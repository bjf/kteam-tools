#!/bin/make
#
# This makefile mirrors git repositories from kernel.ubuntu.com onto github.com.
# This assumes that the account running this makefile has the keys from
# kernel-ppa@canonical.com. You must also use some .ssh/config magic:
#
# Host github.com
#    IdentityFile /home/timg/.ssh/kernel_ppa_rsa
#

MIRROR_REPO_NAME=Ubuntu-kernel
MIRROR_REPO_HOST=git@github.com:Canonical-kernel
SOURCE_REPO_HOST=git://kernel.ubuntu.com/ubuntu
REMOTE=ubuntu

REPOS += linux-firmware
REPOS += autotest-client-tests
REPOS += autotest
REPOS += instrument-lib
REPOS += kernel-testing
REPOS += kteam-tools
REPOS += ubuntu-debian
REPOS += ubuntu-lucid
REPOS += ubuntu-lucid-lbm
REPOS += ubuntu-lucid-meta
REPOS += ubuntu-precise
REPOS += ubuntu-precise-lbm
REPOS += ubuntu-precise-meta
REPOS += ubuntu-quantal
REPOS += ubuntu-quantal-lbm
REPOS += ubuntu-quantal-meta
REPOS += ubuntu-quantal-signed
REPOS += wireless-crda
REPOS += ubuntu-nexus7
REPOS += ubuntu-saucy
REPOS += ubuntu-saucy-signed
REPOS += ubuntu-saucy-meta
REPOS += ubuntu-trusty
REPOS += ubuntu-trusty-signed
REPOS += ubuntu-trusty-meta
REPOS += ubuntu-utopic
REPOS += ubuntu-utopic-signed
REPOS += ubuntu-utopic-meta

all: repo

$(MIRROR_REPO_NAME)/Makefile:
	git clone $(MIRROR_REPO_HOST)/$(MIRROR_REPO_NAME).git

CMRN += cd $(MIRROR_REPO_NAME)

$(REPOS): $(MIRROR_REPO_NAME)/Makefile
	($(CMRN); git checkout -f master)
	($(CMRN); git fetch git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git master; git reset --hard FETCH_HEAD; git push origin +master)
	#
	# Clean out all remotes so that fetches get all new branches.
	#
	($(CMRN); git remote show | grep -v origin | while read r; do git remote rm $$r; done;)
	#
	# Drop all local branches except master
	#
	($(CMRN); for i in `git branch -a | grep -v remotes | egrep -v "^\*[ \t]*master"`; do git branch -D $${i}; done;)
	#
	# Replicate the branches in each repository, substituting '/' for '-' since
	# github doesn't seem to support branch names of the form RELEASE/master. It really
	# wants something like RELEASE-master.
	#
	($(CMRN); git remote add $@ ${SOURCE_REPO_HOST}/$@.git;)
	($(CMRN); git fetch $@; )
	($(CMRN); for j in `git branch -a | egrep "remotes\/$@"|grep -v origin|sed "s;remotes\/$@\/;;"` ; \
        do \
                git branch $@-$${j} remotes/$@/$${j}; \
                git push origin +$@-$${j}; \
        done; )

repo: $(REPOS)
	($(CMRN); git push origin --tags; )
