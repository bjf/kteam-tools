
This README covers the stable directory scripts and other files located
within the kteam-tools directory tree.

App template and creating new scripts
----------------------

We use a template for applications which provides common functionality, command line,
processing, and use of configuration files. In order to create a new script, run:

init-script <class-name> <script-name>

using the name of the script you'd like to create and the name for the main class
wrapper inside it.

Dependencies
----------------------
Several of the scripts get bug information from launchpad via the launchpad
api. There is a wrapper api that sits on top of tha launchpad api which is
used.

1. Use bzr to get a copy of the wrapper api:
    bzr branch bzr+ssh://bazaar.launchpad.net/~arsenal-devel/arsenal/python-launchpadlib-toolkit/

2. Install the wrapper:
    cd python-launchpadlib-toolkit;sudo ./setup.py install


Scripts
----------------------

sru-report
    This is a variation of the script that Martin Pitt uses to report the
    status of package uploads and the associated bugs. This report generates
    json data output which can easily be used by other scripts.

    Example:
        sru-report > srus.json

list-not-verified
    Given a json data file as generated by the sru-report script, it will
    print out all the bugs that have not been verified.

    Example:
        sru-report > srus.json
	list-not-verified srus.json

bug-mod
    Takes a list of bug-ids from stdin and makes modifications to the relevant
    launchpad bug.

generate-meeting-report
    Given a json  data file as generated by the sru-report script, it will
    generate a table with current kernel release versions and the number
    of SRU bugs open and verified. This is typically pasted into the weekly
    kernel team meeting. Uses columns.py to generate the table.

    Example:
        sru-report > srus.json
	generate-meeting-report srus.json

create-sru-cards.py:
    Create a Trello board for a SRU cycle and add cards for the tasks
    which need to be done.
    The cycle given is the date of the Monday in week #1 in
    YYYY.MM.DD format.

    Setup:
      - git clone https://code.launchpad.net/~apw/+git/so-trello
      - cd <kteam-tools-repo>/stable && \
        ln -s <so-trello-repo>/trellotool .
        or
        add "export PYTHONPATH=<so-trello-repo>:$PYTHONPATH" to .profile
        / <shell>rc
      - first time run ($HOME/.trellotool does not exist): run
        create-sru-cards <any YYYY.MM.DD date>, this will print an
        authentication link
        - follow link and accept trellotool to access trello
        - copy <token>
        - create $HOME/.trellotool (if it does not exist) and add:
          trello_token: <token>

    Example:
      create-sru-cards.py 2017.10.09
