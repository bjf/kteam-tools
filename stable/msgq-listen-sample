#!/usr/bin/env python
#

from argparse                           import ArgumentParser, RawDescriptionHelpFormatter
from logging                            import basicConfig, INFO, DEBUG, info, warning
from ktl.msgq                           import MsgQueue
import json

# handler
#
def handler(payload):
    print("Message Received")
    print(json.dumps(payload, sort_keys=True, indent=4))

if __name__ == '__main__':
    # Command line argument setup and initial processing
    #
    app_description = '''
    '''
    app_epilog = '''
examples:
    listen --help
    '''
    parser = ArgumentParser(description=app_description, epilog=app_epilog, formatter_class=RawDescriptionHelpFormatter)
    parser.add_argument('--debug', action='store_true', default=False, help='Print out a lot of messages about what is going on.')
    parser.add_argument('--local', action='store_true', default=False, help='Assume we have sshuttle setup to the MQ server.')
    parser.add_argument('queue', help='Name of the queue to use')

    args = parser.parse_args()

    # If logging parameters were set on the command line, handle them
    # here.
    #
    log_format = "%(levelname)s - %(message)s"
    if args.debug:
        basicConfig(level=DEBUG, format=log_format)
    else:
        basicConfig(level=INFO, format=log_format)

    try:
        if args.local:
            mq = MsgQueue(address='localhost', port=9123)
        else:
            mq = MsgQueue()
        mq.listen(args.queue, 'kernel.#', handler)

        retval = 0

    # Handle the user presses <ctrl-C>.
    #
    except KeyboardInterrupt:
        warning("Aborting ...")

# vi:set ts=4 sw=4 expandtab:

