#!/usr/bin/env python3

import argparse
import re

from ktl.sruboard import SRUBoard, SRUBoardError


if __name__ == '__main__':
    description = 'Add a new respin card for a cycle'
    epilog = '''
This script will reserve a new spin number for the given cycle and then adds
a Notification card for it with some skeleton description to be completed
before starting to create trackers.

Examples:
    Run with the default options:
    $ create-respin-card 2020.03.02

    Do not create anything, just print what would be done:
    $ create-respin-card --dry-run 2018.03.02
'''
    parser = argparse.ArgumentParser(description=description, epilog=epilog,
                                     formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument('cycle', metavar='<cycle>',
                        help='cycle tag (expected format: YYYY.MM.DD)',
                        action='store')
    parser.add_argument('--dry-run', required=False, action='store_true', default=False,
                        help='only print steps, no action done')
    args = parser.parse_args()

    try:
        board = SRUBoard(args.cycle, dryrun=args.dry_run)

        latest_spin = board.get_latest_spin()
        spin = latest_spin.spin + 1

        name  = 'Re-spin (#{}): <fill reason>'.format(spin)
        desc  = 'Justification:\n==============\n'
        desc += '<fill in details here>\n\n'

        issue = board.add_issue(name, desc, state='Kernel Notice')
        if latest_spin.issue is not None:
            board.order_issue(issue.key, latest_spin.issue.key)
    except SRUBoardError as e:
        print(e)
        exit(1)

    exit(0)
