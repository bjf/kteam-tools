#!/bin/bash
#
# queue [-w <who>] <cmd> ...
#
P="queue"

Q="$HOME/queue"
mkdir -p "$Q"

who=""
case "$1" in
-w)	who="$2"; shift 2;;
esac

case "$who" in
*/*)
	echo "$P: $who: invalid" 1>&2
	exit 1
esac

if [ "$#" -lt 1 ]; then
	echo "Usage: $P <cmd> <args>" 1>&2
	echo "       $P enqueue <type> <prio A|B|C> <cmd> ..." 1>&2
	exit 1
fi
cmd="$1"
shift

case "$cmd" in
enqueue)
	if [ "$#" -lt 2 ]; then
		echo "Usage: $P $cmd <type> <prio A|B|C> <cmd> ..." 1>&2
		exit 1
	fi
	which="$1"
	priority="$2"
	shift 2

	time=`date +%s`
	while :
	do
		job=`mktemp "$Q/$priority.$time.$which.XXXXXXXX.N"`
		echo "$@" >>"$job"

		entry=`echo "$job" | sed -e 's@.N$@.Q@'`

		if mv "$job" "$entry" 2>/dev/null; then
			break
		fi

		rm -f "$job"
	done

	echo "$P: $entry -- enqueued" >&2
	;;

queue)
	for i in "$Q"/*.{R,Q}
	do
		{
			cmd=''
			read cmd args <"$i"
		} 2>/dev/null
		[ "$cmd" = '' ] && continue

		cmd=`basename "$cmd"`
		echo "$i: $cmd $args" | sed -r -e "s@^$Q/@@" -e 's/([0-9a-f]{8})[0-9a-f]{32}/\1/g'
	done
	;;

pick)
	if [ "$who" = "" -o "$#" -ne 1 ]; then
		echo "Usage: $P -w <who> pick <which>" 1>&2
		exit 1
	fi
	which="$1"

	if [ -f "$Q/$who.O" ]; then
		echo "$P: ERROR already executing job" >&2
		exit 1
	fi

	for entry in "$Q/"*.$which.*.Q ""
	do
		rentry=`echo "$entry" | sed -e 's@.Q$@.R@'`

		#echo "CANDIDATE: $entry"
		if mv "$entry" "$rentry" 2>/dev/null; then
			entry="$rentry"
			break
		fi
	done

	if [ "$entry" != "" ]; then
		basename "$entry" >"$Q/$who.O"
		echo "$P: $entry -- picked" >&2
		cat "$entry"
	else
		echo "$P: ERROR no jobs available" >&2
		exit 1
	fi
	;;
complete)
	if [ "$who" = "" -o "$#" -ne 0 ]; then
		echo "Usage: $P -w <who> complete" 1>&2
		exit 1
	fi

	if [ ! -f "$Q/$who.O" ]; then
		echo "$P: ERROR not executing job" >&2
		exit 1
	fi

	entry=`cat "$Q/$who.O"`
	rm -f "$Q/$entry" "$Q/$who.O"
	;;
esac
