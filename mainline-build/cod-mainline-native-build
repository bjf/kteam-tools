#! /bin/bash
P="cod-mainline-native-build"

if [ "$#" -ne 2 ]; then
	echo "Usage: $0 <ppa> <changes>" 1>&2
	exit 1
fi

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

cd "$HOME/incoming/native/queue" || exit 1

ppa="$1"
prefix="$2"

P="$P ($ppa)"

changes="${prefix}_source.changes"

if [ ! -f "$changes" ]; then
	echo "$P: $changes: changes file missing?" 1>&2
	exit 1
fi

echo "$P: Uploading source ..."
dput "ppa:ubuntu-kernel-test/ubuntu/$ppa" "$changes"

# Make a nice clean results directory ...
mkdir -p "$prefix"
cd "$prefix" || exit 1

# Monitor the PPA and download the results.
echo "$P: Monitoring build in $ppa ..."
"$here/cod-mainline-native-build-ppa" "$ppa"

# Copy the results out ...
echo "$P: Copying out results ..."

# Drop in the overlay.
tar zxvf "../${prefix}_native.tar.gz"

# Mark the end of the build.
{
	echo "PPA: $ppa"
	for status in *.status
	do
		arch=${status%.status}  
		status=$( cat "$status" )
		case "$status" in
		'Successfully built'|'Published')
			status=0 ;;
		*)
			status=1 ;;
		esac
		echo "Status: $arch $status"
	done
        time=`date +%s`
        echo "End: $time"
} >>BUILT

# Drop in the boiler-plate, checksums etc.
"$here/mainline-build-sources"
"$here/mainline-build-checksum"

# Finally drop this directory into the results for publishing.
cd "$HOME/incoming/native/queue" || exit 1
mkdir -p "$HOME/incoming/native/publish" || exit 1
mv "./$prefix" "$HOME/incoming/native/publish"
rm -f "./$prefix"*
