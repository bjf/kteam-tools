#
# lib-build -- helpers for triggers and build recipies
#
master_main="$HOME/COD"
master_tree="$master_main/linux"

master_state="$master_main/state"

#master_repo="/srv/kernel.ubuntu.com/git/ubuntu"
archive_repo="git://kernel.ubuntu.com/ubuntu-archive"
master_repo="git://kernel.ubuntu.com/ubuntu"

# Select the master tree, creating it if necessary.
master_tree_select()
{
	repo_select "$master_tree"
}

# Select a repo, make it if it does not exist, and init it in git
# in preparation for a repo_remote_update().
repo_select()
{
	# Build us a master tree if we do not have one.
	if [ ! -d "$1" ]; then
		echo "$P: creating primary build tree ..."
		mkdir -p "$1"
		cd "$1"
		git init
	else
		cd "$1"
	fi
}

# Map remote names to real URLs for use when remotes are missing.
repo_remote_url_set()
{
        local remote="$1"

        remote=${remote//./__dt__}
        remote=${remote//-/__mi__}
        remote=${remote//+/__pl__}

	eval url_${remote}='"$2"'
}

repo_remote_url()
{
        local remote="$1"

        remote=${remote//./__dt__}
        remote=${remote//-/__mi__}
        remote=${remote//+/__pl__}

	eval RET="\$url_${remote}"
}

repo_remote_url_set	'linus'			'git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git'
repo_remote_url_set	'2.6.32.y.33.z'		'git://kernel.ubuntu.com/smb/linux-2.6.32.y-drm33.z.git'
repo_remote_url_set	'linux-stable'		'git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git'
repo_remote_url_set	'ubuntu-stable'		'git://kernel.ubuntu.com/herton/linux-stable.git'
repo_remote_url_set	'drm-2.6'		'git://git.kernel.org/pub/scm/linux/kernel/git/airlied/drm-2.6'
repo_remote_url_set	'drm-intel'		'git://anongit.freedesktop.org/drm-intel'
repo_remote_url_set	'debloat-testing'	'git://git.infradead.org/debloat-testing.git'
repo_remote_url_set	'extended-stable'	'git://kernel.ubuntu.com/ubuntu/linux.git'

repo_remote_url_set	'stable-queue'		'git://git.kernel.org/pub/scm/linux/kernel/git/stable/stable-queue.git'
repo_remote_url_set	'stable-queue-3.2'	'git://git.kernel.org/pub/scm/linux/kernel/git/bwh/linux-3.2.y-queue.git'

repo_remote_url_set	'hardy'			'git://kernel.ubuntu.com/ubuntu-archive/ubuntu-hardy.git'
repo_remote_url_set	'intrepid'		'git://kernel.ubuntu.com/ubuntu-archive/ubuntu-intrepid.git'
repo_remote_url_set	'jaunty'		'git://kernel.ubuntu.com/ubuntu-archive/ubuntu-jaunty.git'
repo_remote_url_set	'karmic'		'git://kernel.ubuntu.com/ubuntu-archive/ubuntu-karmic.git'
repo_remote_url_set	'lucid'			'git://kernel.ubuntu.com/ubuntu/ubuntu-lucid.git'
repo_remote_url_set	'maverick'		'git://kernel.ubuntu.com/ubuntu-archive/ubuntu-maverick.git'
repo_remote_url_set	'natty'			'git://kernel.ubuntu.com/ubuntu-archive/ubuntu-natty.git'
repo_remote_url_set	'oneiric'		'git://kernel.ubuntu.com/ubuntu-archive/ubuntu-oneiric.git'
repo_remote_url_set	'precise'		'git://kernel.ubuntu.com/ubuntu/ubuntu-precise.git'
repo_remote_url_set	'quantal'		'git://kernel.ubuntu.com/ubuntu-archive/ubuntu-quantal.git'
repo_remote_url_set	'raring'		'git://kernel.ubuntu.com/ubuntu-archive/ubuntu-raring.git'
repo_remote_url_set	'saucy'			'git://kernel.ubuntu.com/ubuntu-archive/ubuntu-saucy.git'
repo_remote_url_set	'trusty'		'git://kernel.ubuntu.com/ubuntu/ubuntu-trusty.git'
repo_remote_url_set	'utopic'		'git://kernel.ubuntu.com/ubuntu/ubuntu-utopic.git'
repo_remote_url_set	'vivid'			'git://kernel.ubuntu.com/ubuntu/ubuntu-vivid.git'

# Update a specific remote to the latest available, if the remote is missing
# then add it using the urls above.
repo_remote_update()
{
	local remote="$1"
	local url
	local curr

	repo_remote_url "$remote"; url="$RET"

	curr=`git config "remote.$remote.url" || true`
	if [ "$curr" != "$url" ]; then
		echo "$P: removing $remote remote ($curr) ..."
		git remote rm "$remote" || true
		curr=""
	fi
	if [ "$curr" = "" ]; then
		echo "$P: adding $remote remote ($url) ..."
		git remote add "$remote" "$url"
	fi
	echo "$P: fetching $remote remote ..."
	git fetch "$remote" || true
}

repo_remote_update_list()
{
	for remote in "$@"
	do
		repo_remote_update "$remote"
	done
}

#
# Add and update the upstream repositories as needed.
#
repo_update_ubuntu()
{
	local repo="$1"
	local series="$2"
	local series_repo

	(
		if [ ! -d "$master_main/$repo" ]; then
			echo "$P: creating initial repo ($repo) ..."
			mkdir -p "$master_main/$repo"
			cd "$master_main/$repo" && git init
		else
			cd "$master_main/$repo"
		fi
		series_repo=`echo "$repo" | sed -e "s/linux/ubuntu-$series/"`
		series_repo="$master_repo/$series_repo.git"
		if ! git remote | grep "$series" >/dev/null 2>&1; then
			echo "$P: adding $series remote ($series_repo)..."
			git remote add "$series" "$series_repo"
		fi
		git fetch "$series" || true
	)
}
