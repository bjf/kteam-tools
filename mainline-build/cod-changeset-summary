#!/usr/bin/python
from __future__ import print_function

import json
import os
import sys
from urllib import quote

directory = sys.argv[1]
prefix = sys.argv[2]

html = os.path.join(prefix, "index.html.new")
latest = os.path.join(prefix, "latest.json.new")

meta = {}
results = []
for (dirname, dirs, files) in os.walk(directory):
    # Only interested in the leaves.
    if len(dirs) != 0:
        continue

    if 'SUMMARY' not in files:
        continue

    with open(os.path.join(dirname, 'SUMMARY')) as summary_fd:
        entry = {
            'directory': os.path.basename(dirname),
            'host': '-',
        }
        overall = None
        for line in summary_fd:
            bits = line.strip().split(None, 1) + [ '' ]
            (key, value) = (bits[0][:-1].lower(), bits[1])
            if key == 'status':
                sbits = value.split(None, 1) + [ '256' ]
                (arch, value) = sbits[0:2]
                key += '/' + arch
                if not overall:
                    overall = value
                elif value != '0':
                    overall = value
            entry[key] = bits[1]
        entry['status'] = overall

        if 'committed' in entry:
            results.append((entry['committed'], entry))

results.sort(reverse=True)

meta['series'] = results[0][1]['series']
meta['package'] = results[0][1]['package']

with open(html, "w") as html_fd:
    print('''<html>
<head>
<title>Build Tests for {series}/{package}</title>
<style>
.GOOD {{ background-color: green; }}
.FAIL {{ background-color: red; }}
.UBUNTU {{ background-color: #FFFF99; }}
table.matrix {{
    border-collapse: collapse;
}}
table.matrix th {{
    text-align: left;
    padding-left: 5px;
    padding-right: 5px;
}}
table.matrix td {{
    text-align: left;
    padding-left: 5px;
    padding-right: 5px;
}}
#table.matrix, table.matrix th, table.matrix td {{
#   border: 1px solid black;
#}}
#.row:nth-child(6n+1) {{ background-color: darkgrey }}
#.row:nth-child(6n+2) {{ background-color: darkgrey }}
#.row:nth-child(6n+3) {{ background-color: darkgrey }}
.row:nth-child(even) {{ background-color: lightgrey }}

</style>
</head>
<body>
<h1>Build Tests for {series}/{package}</h1>
<table class="matrix">
<tr><th>Changeset<th>Builder<th>Status'''.format(**meta), file=html_fd)
    for _, entry in results:
        status = entry['status']

        row_class = 'row'
        if entry['id'].startswith('Ubuntu-'):
            row_class = 'UBUNTU'

        if status == '0':
            status_string = 'GOOD'
            status_class = 'GOOD'
        else:
            status_string = 'FAIL rc=' + str(status)
            status_class = 'FAIL'
        commit_url = "https://git.launchpad.net/~ubuntu-kernel/ubuntu/+source/{package}/+git/{series}/commit/?id={hash}".format(**entry)
        status_url = "http://kernel.ubuntu.com/~kernel-ppa/test-build/"
        status_url += quote("{series}/{package}/{directory}".format(**entry))
        print('<tr class="{row_class}"><td><a href="{commit_url}">{id}</a> -- {subject}<td>{host}<td class="{status_class}"><a href="{status_url}">{status_string}</a>'.format(
            commit_url=commit_url,
            status_string=status_string,
            status_class=status_class,
            status_url=status_url,
            row_class=row_class,
            **entry
            ), file=html_fd)
    print('''</table>
<body>
</html>''', file=html_fd)

with open(latest, "w") as latest_fd:
    json.dump(results[0][1], latest_fd)
