#!/bin/bash

if [ ! -f "COMMIT" ]; then
	echo "WARNING: no COMMIT: `pwd`"
	exit 1
fi

{
	read commit
	read sha1
} <"COMMIT"
[ "$sha1" = "" ] && sha1='unknown'

#case "$commit" in
#cod/tip/*)	repo="testing/crack.git" ;;
#*rc[0-9]*)	repo="linux.git" ;;
#*)		repo="linux-stable.git" ;;
#esac

#repo="git://kernel.ubuntu.com/virgin/$repo"
#repo="git://kernel.ubuntu.com/virgin/testing/crack.git"
repo="git://git.launchpad.net/~ubuntu-kernel-test/ubuntu/+source/linux/+git/mainline-crack"

{
	echo "$repo $commit $sha1"
	for patch in ????-*
	do
		echo "$patch"
	done
} >"SOURCES"

generate_readme()
{
    cat - <<EOL
These binary packages represent builds of the mainline or stable Linux kernel tree at the commit below:

    $commit ($sha1)

To obtain the source from which they are built fetch the commit below:

    $repo $commit

and apply the following patches on top in the order below:

EOL
    for patch in ????-*
    do
        echo "    $patch"
    done
    cat - <<EOL

This is summarised in the SOURCES file included with these binaries.

EOL
    gstatus=0
    grep Status: BUILT | \
    while read x arch status x
    do
	case "$arch" in
	binary-headers)		gstatus="$status"; continue ;;
	esac

	if [ "$gstatus" = 0 -a "$status" = 0 ]; then
		was="succeeded"
	else
		was="failed"
	fi
	echo "Build for $arch $was (see BUILD.LOG.$arch):"
	for deb in *_all.deb *_$arch.deb
	do
		case "$deb" in
		"*_all.deb|*_$arch.deb")	continue ;;
		esac
		echo "    $deb"
	done
	echo ""
    done
    cat - <<EOL
For further information see: http://wiki.ubuntu.com/Kernel/MainlineBuilds
EOL
}

generate_readme >"README"
{
    echo "<h1>$commit mainline build</h1>"
    echo "<code>"
    generate_readme | sed \
	-e 's@\(http:[^ ]*\)@<a href="\1">\1</a>@' \
	-e 's@\([^ ]*\.deb\>\)@<a href="\1">\1</a>@' \
	-e 's@\([^ ]*\.patch\>\)@<a href="\1">\1</a>@' \
	-e 's@\(\<SOURCES\|BUILD.LOG.[^ ]*\>\)@<a href="\1">\1</a>@' \
	-e 's@$@<br>@' \
	-e 's@^ @\&nbsp;@g'
    echo "</code>"
} >"HEADER.html"
